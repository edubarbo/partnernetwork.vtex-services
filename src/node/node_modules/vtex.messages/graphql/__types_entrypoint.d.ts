export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  IOSanitizedString: any;
  IOUpload: any;
  Upload: any;
};

export type Behavior = 
  | 'USER_ONLY'
  | 'USER_AND_APP'
  | 'FULL';

export type Encoding = 
  | 'ICU'
  | 'HANDLEBARS';

export type IndexedMessages = {
  from: Scalars['String'];
  messages: Array<MessageInputV2>;
};



export type Languages = {
  __typename?: 'Languages';
  supported: Array<Scalars['String']>;
  default: Scalars['String'];
};

export type ListArgsV2 = {
  range: MessagesRange;
};

export type MessageInputV2 = {
  content: Scalars['String'];
  context?: Maybe<Scalars['String']>;
  behavior?: Maybe<Behavior>;
};

export type MessageListV2 = {
  __typename?: 'MessageListV2';
  srcLang: Scalars['String'];
  groupContext?: Maybe<Scalars['String']>;
  context?: Maybe<Scalars['String']>;
  translations: Array<Translation>;
};

export type MessageSaveInputV2 = {
  srcLang: Scalars['String'];
  srcMessage: Scalars['String'];
  targetMessage: Scalars['String'];
  groupContext?: Maybe<Scalars['String']>;
  context?: Maybe<Scalars['String']>;
};

export type MessagesRange = {
  from: Scalars['Int'];
  to: Scalars['Int'];
};

export type Mutation = {
  __typename?: 'Mutation';
  saveV2: Scalars['Boolean'];
};


export type MutationSaveV2Args = {
  args: SaveArgsV2;
};

export type Query = {
  __typename?: 'Query';
  languages: Languages;
  translate: Array<Maybe<Scalars['String']>>;
  translateWithDependencies: Array<Maybe<Scalars['String']>>;
  userTranslations: Array<Maybe<MessageListV2>>;
  listV2: Array<MessageListV2>;
  authorize: Scalars['Boolean'];
};


export type QueryTranslateArgs = {
  args: TranslateArgs;
};


export type QueryTranslateWithDependenciesArgs = {
  args: TranslateWithDependenciesArgs;
};


export type QueryUserTranslationsArgs = {
  args: IndexedMessages;
};


export type QueryListV2Args = {
  args: ListArgsV2;
};

export type SaveArgsV2 = {
  to: Scalars['String'];
  messages: Array<MessageSaveInputV2>;
  fireEvent?: Maybe<Scalars['Boolean']>;
};

export type TranslateArgs = {
  indexedByFrom: Array<IndexedMessages>;
  to: Scalars['String'];
  depTree?: Maybe<Scalars['String']>;
  encoding?: Maybe<Encoding>;
};

export type TranslateWithDependenciesArgs = {
  indexedByFrom: Array<IndexedMessages>;
  to: Scalars['String'];
  depTree: Scalars['String'];
  encoding?: Maybe<Encoding>;
};

export type Translation = {
  __typename?: 'Translation';
  lang: Scalars['String'];
  translation: Scalars['String'];
};


export {}