import { RequestTracingConfig, JanusClient, IOContext, InstanceOptions } from '@vtex/api';
import { AuthMethod } from '../typings/tokens';
import { LogisticOutput, LogisticPickupPoint } from '../typings/logistics';
export declare class Logistics extends JanusClient {
    constructor(ctx: IOContext, options?: InstanceOptions);
    getDockById(dockId: string, authMethod?: AuthMethod, tracingConfig?: RequestTracingConfig): Promise<any>;
    pickupById(id: string, authMethod?: AuthMethod, tracingConfig?: RequestTracingConfig): Promise<LogisticPickupPoint>;
    listPickupPoints(authMethod?: AuthMethod, tracingConfig?: RequestTracingConfig): Promise<LogisticOutput>;
    nearPickupPoints(lat: string, long: string, maxDistance?: number, authMethod?: AuthMethod, tracingConfig?: RequestTracingConfig): Promise<LogisticOutput>;
    shipping(authMethod?: AuthMethod, tracingConfig?: RequestTracingConfig): Promise<LogisticPickupPoint>;
}
