export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  JSON: any;
  IOSanitizedString: any;
  IOUpload: any;
  Upload: any;
};

export type Alternates = {
  __typename?: 'Alternates';
  binding?: Maybe<Scalars['String']>;
  path?: Maybe<Scalars['String']>;
};

export type AlternatesInput = {
  binding?: Maybe<Scalars['String']>;
  path?: Maybe<Scalars['String']>;
};

export type EntityLocator = {
  id: Scalars['String'];
  type: Scalars['String'];
};

export type Internal = {
  __typename?: 'Internal';
  from: Scalars['String'];
  declarer: Scalars['String'];
  type: Scalars['String'];
  id: Scalars['String'];
  query?: Maybe<Scalars['JSON']>;
  /** @deprecated Enable routes by binding */
  bindings?: Maybe<Array<Scalars['String']>>;
  binding: Scalars['String'];
  endDate?: Maybe<Scalars['String']>;
  imagePath?: Maybe<Scalars['String']>;
  imageTitle?: Maybe<Scalars['String']>;
  routesVersion?: Maybe<Scalars['Float']>;
  resolveAs?: Maybe<Scalars['String']>;
  origin?: Maybe<Scalars['String']>;
  disableSitemapEntry?: Maybe<Scalars['Boolean']>;
  alternates?: Maybe<Array<Maybe<Alternates>>>;
};

export type InternalInput = {
  from: Scalars['String'];
  declarer: Scalars['String'];
  type: Scalars['String'];
  id: Scalars['String'];
  query?: Maybe<Scalars['JSON']>;
  bindings?: Maybe<Array<Scalars['String']>>;
  binding?: Maybe<Scalars['String']>;
  endDate?: Maybe<Scalars['String']>;
  imagePath?: Maybe<Scalars['String']>;
  imageTitle?: Maybe<Scalars['String']>;
  resolveAs?: Maybe<Scalars['String']>;
  origin?: Maybe<Scalars['String']>;
  disableSitemapEntry?: Maybe<Scalars['Boolean']>;
  alternates?: Maybe<Array<Maybe<AlternatesInput>>>;
};




export type ListInternalsResponse = {
  __typename?: 'ListInternalsResponse';
  routes?: Maybe<Array<Internal>>;
  next?: Maybe<Scalars['String']>;
};

export type ListRedirectsResponse = {
  __typename?: 'ListRedirectsResponse';
  routes?: Maybe<Array<Redirect>>;
  next?: Maybe<Scalars['String']>;
};

export type MutateInternal = {
  __typename?: 'MutateInternal';
  save?: Maybe<Internal>;
  saveMany: Scalars['Boolean'];
  delete?: Maybe<Internal>;
  deleteMany: Scalars['Boolean'];
};


export type MutateInternalSaveArgs = {
  route: InternalInput;
};


export type MutateInternalSaveManyArgs = {
  routes: Array<InternalInput>;
};


export type MutateInternalDeleteArgs = {
  path: Scalars['String'];
  locator?: Maybe<RouteLocator>;
};


export type MutateInternalDeleteManyArgs = {
  paths: Array<Scalars['String']>;
  locators?: Maybe<Array<RouteLocator>>;
};

export type MutateRedirect = {
  __typename?: 'MutateRedirect';
  save?: Maybe<Redirect>;
  saveMany: Scalars['Boolean'];
  delete?: Maybe<Redirect>;
  deleteMany: Scalars['Boolean'];
};


export type MutateRedirectSaveArgs = {
  route: RedirectInput;
};


export type MutateRedirectSaveManyArgs = {
  routes: Array<RedirectInput>;
};


export type MutateRedirectDeleteArgs = {
  path: Scalars['String'];
  locator?: Maybe<RouteLocator>;
};


export type MutateRedirectDeleteManyArgs = {
  paths: Array<Scalars['String']>;
  locators?: Maybe<Array<RouteLocator>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  redirect: MutateRedirect;
  internal: MutateInternal;
};

export type Query = {
  __typename?: 'Query';
  redirect: QueryRedirect;
  internal: QueryInternal;
};

export type QueryInternal = {
  __typename?: 'QueryInternal';
  get?: Maybe<Internal>;
  listInternals: ListInternalsResponse;
  routes?: Maybe<Array<RoutesByBinding>>;
  /** @deprecated Field no longer supported */
  list?: Maybe<Array<Internal>>;
  /** @deprecated Field no longer supported */
  index?: Maybe<Array<RouteIndexEntry>>;
  /** @deprecated Field no longer supported */
  indexFiles?: Maybe<RouteIndexFiles>;
  /** @deprecated Field no longer supported */
  numberOfEntries?: Maybe<Scalars['Int']>;
};


export type QueryInternalGetArgs = {
  path: Scalars['String'];
  locator?: Maybe<RouteLocator>;
};


export type QueryInternalListInternalsArgs = {
  limit?: Maybe<Scalars['Int']>;
  next?: Maybe<Scalars['String']>;
};


export type QueryInternalRoutesArgs = {
  locator?: Maybe<EntityLocator>;
};


export type QueryInternalListArgs = {
  from: Scalars['Int'];
  to: Scalars['Int'];
  indexFile?: Maybe<Scalars['String']>;
};


export type QueryInternalIndexArgs = {
  fileName: Scalars['String'];
};

export type QueryRedirect = {
  __typename?: 'QueryRedirect';
  get?: Maybe<Redirect>;
  listRedirects: ListRedirectsResponse;
  /** @deprecated Field no longer supported */
  list?: Maybe<Array<Redirect>>;
  /** @deprecated Field no longer supported */
  index?: Maybe<Array<RouteIndexEntry>>;
  /** @deprecated Field no longer supported */
  indexFiles?: Maybe<RouteIndexFiles>;
  /** @deprecated Field no longer supported */
  numberOfEntries?: Maybe<Scalars['Int']>;
};


export type QueryRedirectGetArgs = {
  path: Scalars['String'];
  locator?: Maybe<RouteLocator>;
};


export type QueryRedirectListRedirectsArgs = {
  limit?: Maybe<Scalars['Int']>;
  next?: Maybe<Scalars['String']>;
};


export type QueryRedirectListArgs = {
  from: Scalars['Int'];
  to: Scalars['Int'];
  indexFile?: Maybe<Scalars['String']>;
};


export type QueryRedirectIndexArgs = {
  fileName: Scalars['String'];
};

export type Redirect = {
  __typename?: 'Redirect';
  from: Scalars['String'];
  to: Scalars['String'];
  endDate?: Maybe<Scalars['String']>;
  type: RedirectTypes;
  /** @deprecated Enable routes by binding */
  bindings?: Maybe<Array<Scalars['String']>>;
  binding: Scalars['String'];
  origin?: Maybe<Scalars['String']>;
};

export type RedirectInput = {
  from: Scalars['String'];
  to: Scalars['String'];
  endDate?: Maybe<Scalars['String']>;
  type: RedirectTypes;
  bindings?: Maybe<Array<Scalars['String']>>;
  binding?: Maybe<Scalars['String']>;
  origin?: Maybe<Scalars['String']>;
};

export type RedirectTypes = 
  | 'PERMANENT'
  | 'TEMPORARY';

export type RouteIndexEntry = {
  __typename?: 'RouteIndexEntry';
  id: Scalars['String'];
  lastChangeDate: Scalars['String'];
};

export type RouteIndexFileEntry = {
  __typename?: 'RouteIndexFileEntry';
  fileName: Scalars['String'];
  fileSize: Scalars['Int'];
};

export type RouteIndexFiles = {
  __typename?: 'RouteIndexFiles';
  lastChangeDate: Scalars['String'];
  routeIndexFiles: Array<RouteIndexFileEntry>;
};

export type RouteLocator = {
  from: Scalars['String'];
  binding: Scalars['String'];
};

export type RoutesByBinding = {
  __typename?: 'RoutesByBinding';
  binding: Scalars['String'];
  route: Scalars['String'];
};


export {}