"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateProductSpecification = void 0;
const getServiceHTML = (service) => {
    return `
    <h2 class="vtex-specs-title">${service.name}</h2>
    <p class="vtex-specs-content">${service.description}</p>
  `;
};
const getWebsiteHTML = (website) => `<a href="${website}" target="_blank" rel="noopener" class="vtex-product-specification-website">${website}</a>`;
const MAX_SERVICE_ITEMS = 5;
async function updateProductSpecification(ctx) {
    const { partner, product: { Id }, } = ctx.state;
    const services = (await ctx.clients.masterdata.searchDocuments({
        dataEntity: 'PS',
        fields: ['name', 'description'],
        where: `(partnerID=${partner.id} AND isRemoved=false AND isActive=true)`,
        pagination: {
            page: 1,
            pageSize: 5,
        },
    }));
    let specificationServices = [];
    for (let index = 0; index < MAX_SERVICE_ITEMS; index++) {
        const currentService = services[index];
        if (!currentService) {
            specificationServices.push({
                Name: `Service ${index + 1}`,
                Value: [''],
            });
            continue;
        }
        specificationServices.push({
            Name: `Service ${index + 1}`,
            Value: [
                getServiceHTML({
                    name: currentService.name,
                    description: currentService.description,
                }),
            ],
        });
    }
    const specificationPartnerType = {
        Name: 'Tipo de Parceiro',
        Value: [JSON.parse(partner.types.toString().replace(/'/g, '"')).join(', ')],
    };
    const specificationRegions = {
        Name: 'RegiÃ£o',
        Value: JSON.parse(partner.regions.toString().replace(/'/g, '"')),
    };
    const specificationWebsite = {
        Name: 'Website',
        Value: [getWebsiteHTML(partner.website)],
    };
    const categories = JSON.parse(partner.categories.toString().replace(/'/g, '"'));
    const subcategories = JSON.parse(partner.subcategories.toString().replace(/'/g, '"'));
    const specificationCategories = {
        Name: 'Categoria',
        Value: categories.map(category => category.name),
    };
    const specificationSubcategories = {
        Name: 'SubCategoria',
        Value: subcategories
            .map(item => item.subcategories.map(({ name }) => name))
            .reduce((arr, items) => [...arr, ...items], []),
    };
    const specificationData = [
        ...specificationServices,
        specificationPartnerType,
        specificationRegions,
        specificationWebsite,
        specificationCategories,
        specificationSubcategories,
    ];
    await ctx.clients.catalog.updateProductSpecification(Id, specificationData);
}
exports.updateProductSpecification = updateProductSpecification;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbm9kZS9taWRkbGV3YXJlcy91cGRhdGVQcm9kdWN0U3BlY2lmaWNhdGlvbi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFJQSxNQUFNLGNBQWMsR0FBRyxDQUFDLE9BQStDLEVBQUUsRUFBRTtJQUN6RSxPQUFPO21DQUMwQixPQUFPLENBQUMsSUFBSTtvQ0FDWCxPQUFPLENBQUMsV0FBVztHQUNwRCxDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBRUQsTUFBTSxjQUFjLEdBQUcsQ0FBQyxPQUFlLEVBQUUsRUFBRSxDQUN6QyxZQUFZLE9BQU8sK0VBQStFLE9BQU8sTUFBTSxDQUFBO0FBRWpILE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxDQUFBO0FBRXBCLEtBQUssVUFBVSwwQkFBMEIsQ0FBQyxHQUF1QjtJQUN0RSxNQUFNLEVBQ0osT0FBTyxFQUNQLE9BQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUNoQixHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUE7SUFFYixNQUFNLFFBQVEsR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsZUFBZSxDQUFXO1FBQ3ZFLFVBQVUsRUFBRSxJQUFJO1FBQ2hCLE1BQU0sRUFBRSxDQUFDLE1BQU0sRUFBRSxhQUFhLENBQUM7UUFDL0IsS0FBSyxFQUFFLGNBQWMsT0FBTyxDQUFDLEVBQUUseUNBQXlDO1FBQ3hFLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxDQUFDO1lBQ1AsUUFBUSxFQUFFLENBQUM7U0FDWjtLQUNGLENBQUMsQ0FBNkMsQ0FBQTtJQUUvQyxJQUFJLHFCQUFxQixHQUFHLEVBQUUsQ0FBQTtJQUU5QixLQUFLLElBQUksS0FBSyxHQUFHLENBQUMsRUFBRSxLQUFLLEdBQUcsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLEVBQUU7UUFDdEQsTUFBTSxjQUFjLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBRXRDLElBQUksQ0FBQyxjQUFjLEVBQUU7WUFDbkIscUJBQXFCLENBQUMsSUFBSSxDQUFDO2dCQUN6QixJQUFJLEVBQUUsV0FBVyxLQUFLLEdBQUcsQ0FBQyxFQUFFO2dCQUM1QixLQUFLLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDWixDQUFDLENBQUE7WUFFRixTQUFRO1NBQ1Q7UUFFRCxxQkFBcUIsQ0FBQyxJQUFJLENBQUM7WUFDekIsSUFBSSxFQUFFLFdBQVcsS0FBSyxHQUFHLENBQUMsRUFBRTtZQUM1QixLQUFLLEVBQUU7Z0JBQ0wsY0FBYyxDQUFDO29CQUNiLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSTtvQkFDekIsV0FBVyxFQUFFLGNBQWMsQ0FBQyxXQUFXO2lCQUN4QyxDQUFDO2FBQ0g7U0FDRixDQUFDLENBQUE7S0FDSDtJQUVELE1BQU0sd0JBQXdCLEdBQUc7UUFDL0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixLQUFLLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUM1RSxDQUFBO0lBRUQsTUFBTSxvQkFBb0IsR0FBRztRQUMzQixJQUFJLEVBQUUsUUFBUTtRQUNkLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQztLQUNqRSxDQUFBO0lBRUQsTUFBTSxvQkFBb0IsR0FBRztRQUMzQixJQUFJLEVBQUUsU0FBUztRQUNmLEtBQUssRUFBRSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDekMsQ0FBQTtJQUVELE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQzNCLE9BQU8sQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FDbEMsQ0FBQTtJQUNoQixNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUM5QixPQUFPLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQ2hDLENBQUE7SUFFckIsTUFBTSx1QkFBdUIsR0FBRztRQUM5QixJQUFJLEVBQUUsV0FBVztRQUNqQixLQUFLLEVBQUUsVUFBVSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7S0FDakQsQ0FBQTtJQUVELE1BQU0sMEJBQTBCLEdBQUc7UUFDakMsSUFBSSxFQUFFLGNBQWM7UUFDcEIsS0FBSyxFQUFFLGFBQWE7YUFDakIsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUN2RCxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsR0FBRyxFQUFFLEdBQUcsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDO0tBQ2xELENBQUE7SUFFRCxNQUFNLGlCQUFpQixHQUFHO1FBQ3hCLEdBQUcscUJBQXFCO1FBQ3hCLHdCQUF3QjtRQUN4QixvQkFBb0I7UUFDcEIsb0JBQW9CO1FBQ3BCLHVCQUF1QjtRQUN2QiwwQkFBMEI7S0FDM0IsQ0FBQTtJQUVELE1BQU0sR0FBRyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsMEJBQTBCLENBQUMsRUFBRSxFQUFFLGlCQUFpQixDQUFDLENBQUE7QUFDN0UsQ0FBQztBQXJGRCxnRUFxRkMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUeXBpbmdcbmltcG9ydCB7IElTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vdHlwaW5ncy9zZXJ2aWNlJ1xuaW1wb3J0IHsgSUNhdGVnb3J5LCBJU3ViY2F0ZWdvcmllcyB9IGZyb20gJy4uLy4uL3R5cGluZ3MvcGFydG5lcidcblxuY29uc3QgZ2V0U2VydmljZUhUTUwgPSAoc2VydmljZTogUGljazxJU2VydmljZSwgJ25hbWUnIHwgJ2Rlc2NyaXB0aW9uJz4pID0+IHtcbiAgcmV0dXJuIGBcbiAgICA8aDIgY2xhc3M9XCJ2dGV4LXNwZWNzLXRpdGxlXCI+JHtzZXJ2aWNlLm5hbWV9PC9oMj5cbiAgICA8cCBjbGFzcz1cInZ0ZXgtc3BlY3MtY29udGVudFwiPiR7c2VydmljZS5kZXNjcmlwdGlvbn08L3A+XG4gIGBcbn1cblxuY29uc3QgZ2V0V2Vic2l0ZUhUTUwgPSAod2Vic2l0ZTogc3RyaW5nKSA9PlxuICBgPGEgaHJlZj1cIiR7d2Vic2l0ZX1cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lclwiIGNsYXNzPVwidnRleC1wcm9kdWN0LXNwZWNpZmljYXRpb24td2Vic2l0ZVwiPiR7d2Vic2l0ZX08L2E+YFxuXG5jb25zdCBNQVhfU0VSVklDRV9JVEVNUyA9IDVcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVByb2R1Y3RTcGVjaWZpY2F0aW9uKGN0eDogQ3VzdG9tRXZlbnRDb250ZXh0KSB7XG4gIGNvbnN0IHtcbiAgICBwYXJ0bmVyLFxuICAgIHByb2R1Y3Q6IHsgSWQgfSxcbiAgfSA9IGN0eC5zdGF0ZVxuXG4gIGNvbnN0IHNlcnZpY2VzID0gKGF3YWl0IGN0eC5jbGllbnRzLm1hc3RlcmRhdGEuc2VhcmNoRG9jdW1lbnRzPElTZXJ2aWNlPih7XG4gICAgZGF0YUVudGl0eTogJ1BTJyxcbiAgICBmaWVsZHM6IFsnbmFtZScsICdkZXNjcmlwdGlvbiddLFxuICAgIHdoZXJlOiBgKHBhcnRuZXJJRD0ke3BhcnRuZXIuaWR9IEFORCBpc1JlbW92ZWQ9ZmFsc2UgQU5EIGlzQWN0aXZlPXRydWUpYCxcbiAgICBwYWdpbmF0aW9uOiB7XG4gICAgICBwYWdlOiAxLFxuICAgICAgcGFnZVNpemU6IDUsXG4gICAgfSxcbiAgfSkpIGFzIFBpY2s8SVNlcnZpY2UsICduYW1lJyB8ICdkZXNjcmlwdGlvbic+W11cblxuICBsZXQgc3BlY2lmaWNhdGlvblNlcnZpY2VzID0gW11cblxuICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgTUFYX1NFUlZJQ0VfSVRFTVM7IGluZGV4KyspIHtcbiAgICBjb25zdCBjdXJyZW50U2VydmljZSA9IHNlcnZpY2VzW2luZGV4XVxuXG4gICAgaWYgKCFjdXJyZW50U2VydmljZSkge1xuICAgICAgc3BlY2lmaWNhdGlvblNlcnZpY2VzLnB1c2goe1xuICAgICAgICBOYW1lOiBgU2VydmljZSAke2luZGV4ICsgMX1gLFxuICAgICAgICBWYWx1ZTogWycnXSxcbiAgICAgIH0pXG5cbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgc3BlY2lmaWNhdGlvblNlcnZpY2VzLnB1c2goe1xuICAgICAgTmFtZTogYFNlcnZpY2UgJHtpbmRleCArIDF9YCxcbiAgICAgIFZhbHVlOiBbXG4gICAgICAgIGdldFNlcnZpY2VIVE1MKHtcbiAgICAgICAgICBuYW1lOiBjdXJyZW50U2VydmljZS5uYW1lLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBjdXJyZW50U2VydmljZS5kZXNjcmlwdGlvbixcbiAgICAgICAgfSksXG4gICAgICBdLFxuICAgIH0pXG4gIH1cblxuICBjb25zdCBzcGVjaWZpY2F0aW9uUGFydG5lclR5cGUgPSB7XG4gICAgTmFtZTogJ1RpcG8gZGUgUGFyY2Vpcm8nLFxuICAgIFZhbHVlOiBbSlNPTi5wYXJzZShwYXJ0bmVyLnR5cGVzLnRvU3RyaW5nKCkucmVwbGFjZSgvJy9nLCAnXCInKSkuam9pbignLCAnKV0sXG4gIH1cblxuICBjb25zdCBzcGVjaWZpY2F0aW9uUmVnaW9ucyA9IHtcbiAgICBOYW1lOiAnUmVnacOjbycsXG4gICAgVmFsdWU6IEpTT04ucGFyc2UocGFydG5lci5yZWdpb25zLnRvU3RyaW5nKCkucmVwbGFjZSgvJy9nLCAnXCInKSksXG4gIH1cblxuICBjb25zdCBzcGVjaWZpY2F0aW9uV2Vic2l0ZSA9IHtcbiAgICBOYW1lOiAnV2Vic2l0ZScsXG4gICAgVmFsdWU6IFtnZXRXZWJzaXRlSFRNTChwYXJ0bmVyLndlYnNpdGUpXSxcbiAgfVxuXG4gIGNvbnN0IGNhdGVnb3JpZXMgPSBKU09OLnBhcnNlKFxuICAgIHBhcnRuZXIuY2F0ZWdvcmllcy50b1N0cmluZygpLnJlcGxhY2UoLycvZywgJ1wiJylcbiAgKSBhcyBJQ2F0ZWdvcnlbXVxuICBjb25zdCBzdWJjYXRlZ29yaWVzID0gSlNPTi5wYXJzZShcbiAgICBwYXJ0bmVyLnN1YmNhdGVnb3JpZXMudG9TdHJpbmcoKS5yZXBsYWNlKC8nL2csICdcIicpXG4gICkgYXMgSVN1YmNhdGVnb3JpZXNbXVxuXG4gIGNvbnN0IHNwZWNpZmljYXRpb25DYXRlZ29yaWVzID0ge1xuICAgIE5hbWU6ICdDYXRlZ29yaWEnLFxuICAgIFZhbHVlOiBjYXRlZ29yaWVzLm1hcChjYXRlZ29yeSA9PiBjYXRlZ29yeS5uYW1lKSxcbiAgfVxuXG4gIGNvbnN0IHNwZWNpZmljYXRpb25TdWJjYXRlZ29yaWVzID0ge1xuICAgIE5hbWU6ICdTdWJDYXRlZ29yaWEnLFxuICAgIFZhbHVlOiBzdWJjYXRlZ29yaWVzXG4gICAgICAubWFwKGl0ZW0gPT4gaXRlbS5zdWJjYXRlZ29yaWVzLm1hcCgoeyBuYW1lIH0pID0+IG5hbWUpKVxuICAgICAgLnJlZHVjZSgoYXJyLCBpdGVtcykgPT4gWy4uLmFyciwgLi4uaXRlbXNdLCBbXSksXG4gIH1cblxuICBjb25zdCBzcGVjaWZpY2F0aW9uRGF0YSA9IFtcbiAgICAuLi5zcGVjaWZpY2F0aW9uU2VydmljZXMsXG4gICAgc3BlY2lmaWNhdGlvblBhcnRuZXJUeXBlLFxuICAgIHNwZWNpZmljYXRpb25SZWdpb25zLFxuICAgIHNwZWNpZmljYXRpb25XZWJzaXRlLFxuICAgIHNwZWNpZmljYXRpb25DYXRlZ29yaWVzLFxuICAgIHNwZWNpZmljYXRpb25TdWJjYXRlZ29yaWVzLFxuICBdXG5cbiAgYXdhaXQgY3R4LmNsaWVudHMuY2F0YWxvZy51cGRhdGVQcm9kdWN0U3BlY2lmaWNhdGlvbihJZCwgc3BlY2lmaWNhdGlvbkRhdGEpXG59XG4iXX0=