{"version":3,"sources":["webpack://partnernetwork.vtex-services/../apolloClient.js","webpack://partnernetwork.vtex-services/./react/apolloClient.ts","webpack://partnernetwork.vtex-services/external \"GraphQL\"","webpack://partnernetwork.vtex-services/external \"React\""],"names":["requireEntry","require","__webpack_public_path__","getPublicPath","register","module","renderHotReload","setupHMR"],"mappings":";;;;;;AACI;AAAA;AAAA;AAAA;;AACA,IAAMA,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAMC,mBAAO,CAAC,yBAAD,CAAb;AAAA,CAArB;;AAEAC,qBAAuB,GAAGC,4HAAa,CAAC,oCAAD,CAAvC;;gBAEoCC,uHAAQ,CAACJ,YAAD,EAAeK,MAAf,EAAuB,oCAAvB,EAA6D,kCAA7D,EAAiG,cAAjG,C;IAArCC,e,aAAAA,e;IAAiBC,Q,aAAAA,Q;;AACxB,IAAIF,KAAJ,EAA4B,2B;;;;;;;;;ACPhC;AAAA;AAAA;AAAA;AAEO,IAAM,MAAM,GAAG,IAAI,2DAAJ,CAAiB;AACrC,KAAG,EAAE,uBADgC;AAErC,OAAK,EAAE,IAAI,4DAAJ,CAAkB;AACvB,eAAW,EAAE;AADU,GAAlB;AAF8B,CAAjB,CAAf,C;;;;;;;ACFP,yB;;;;;;;ACAA,uB","file":"apolloClient.js","sourcesContent":["\n    import {getPublicPath, register} from '/usr/local/data/service/src/node/build/react/3.x/entrypoints/shared.js'\n    const requireEntry = () => require('/cache/build/build_partnernetwork_master/partnernetwork.vtex-services@1.6.6/src/react/apolloClient.ts')\n\n    __webpack_public_path__ = getPublicPath('partnernetwork.vtex-services@1.6.6')\n\n    const {renderHotReload, setupHMR} = register(requireEntry, module, 'partnernetwork.vtex-services@1.6.6', 'partnernetwork.vtex-services@1.x', 'apolloClient')\n    if (module.hot && setupHMR) {\n      require('/usr/local/data/service/node_modules/webpack/hot/dev-server.js')\n      const hotLog = require('/usr/local/data/service/node_modules/webpack/hot/log.js')\n      const hotEmitter = require('/usr/local/data/service/node_modules/webpack/hot/emitter.js')\n\n      setupHMR(hotEmitter, hotLog)\n      if (renderHotReload) {\n        module.hot.accept('/cache/build/build_partnernetwork_master/partnernetwork.vtex-services@1.6.6/src/react/apolloClient.ts', renderHotReload)\n      }\n    }\n","import { ApolloClient, InMemoryCache } from '@apollo/client'\n\nexport const client = new ApolloClient({\n  uri: '/_v/public/graphql/v1',\n  cache: new InMemoryCache({\n    addTypename: false,\n  }),\n})\n","module.exports = GraphQL;","module.exports = React;"],"sourceRoot":""}