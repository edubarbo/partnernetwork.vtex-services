{"version":3,"sources":["webpack://partnernetwork.vtex-services/./react/PartnerDetails.tsx","webpack://partnernetwork.vtex-services/./react/components/DenyModal/index.tsx","webpack://partnernetwork.vtex-services/./react/components/ImageContainer/index.tsx","webpack://partnernetwork.vtex-services/./react/components/Select/DropdownIndicator/index.tsx","webpack://partnernetwork.vtex-services/./react/components/Select/index.tsx","webpack://partnernetwork.vtex-services/./react/components/Table/index.tsx","webpack://partnernetwork.vtex-services/./react/components/TableRow/index.tsx","webpack://partnernetwork.vtex-services/./react/components/Title/index.tsx","webpack://partnernetwork.vtex-services/./react/containers/PartnerClients/index.tsx","webpack://partnernetwork.vtex-services/./react/containers/PartnerData/categories.ts","webpack://partnernetwork.vtex-services/./react/containers/PartnerData/countries.tsx","webpack://partnernetwork.vtex-services/./react/containers/PartnerData/index.tsx","webpack://partnernetwork.vtex-services/./react/containers/PartnerData/partnerTypes.tsx","webpack://partnernetwork.vtex-services/./react/containers/PartnerServices/index.tsx"],"names":[],"mappings":"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","file":"PartnerDetails~PartnerDetailsWrapper.js","sourcesContent":["// Dependencies\nimport React, { useState } from 'react'\nimport { PageBlock, Tabs, Tab, Spinner, Button, Alert } from 'vtex.styleguide'\nimport { useDisclosure } from 'vtex.styleguide/utils'\nimport { useQuery, gql } from '@apollo/client'\nimport { useRuntime } from 'vtex.render-runtime'\nimport axios from 'axios'\n\n// Containers\nimport PartnerData from './containers/PartnerData'\nimport PartnerClients from './containers/PartnerClients'\nimport PartnerServices from './containers/PartnerServices'\nimport DenyModal from './components/DenyModal'\n\nconst partnerQuery = gql`\n  query getPartner($account: String) {\n    partner(account: $account)\n      @context(provider: \"partnernetwork.vtex-services@1.x\") {\n      id\n      name\n      email\n      status\n      imgURL\n      website\n      types\n      regions\n      description\n      categories {\n        id\n        name\n      }\n      subcategories {\n        categoryID\n        subcategories {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\ntype Status = 'APPROVING' | 'DENYING' | 'DENIED' | 'ERROR' | 'SUCCESS'\n\nconst PartnerDetails: React.FC = () => {\n  const [status, setStatus] = useState<Status>()\n  const [statusButton, setStatusButton] = useState('')\n  const [currentTab, setCurrentTab] = useState(0)\n  const { isOpen, onOpen, onClose } = useDisclosure()\n\n  const {\n    route: { params },\n  } = useRuntime()\n\n  const { data, loading } = useQuery(partnerQuery, {\n    variables: {\n      account: params.account,\n    },\n  })\n\n  const handleRateButton = (param: string) => {\n    onOpen()\n    setStatusButton(param)\n  }\n\n  const handleDeny = async (reason: string, observation: string) => {\n    const partnerID = data.partner.id\n\n    if (statusButton === 'Deny') {\n      try {\n        setStatus('DENYING')\n\n        await axios.patch(`/api/dataentities/PN/documents/${partnerID}`, {\n          status: 'DENIED',\n          reasonDeny: reason,\n          observationDeny: observation,\n        })\n\n        setStatus('DENIED')\n      } catch {\n        setStatus('ERROR')\n      }\n    } else if (statusButton === 'Approve') {\n      try {\n        setStatus('APPROVING')\n\n        await axios.patch(`/api/dataentities/PN/documents/${partnerID}`, {\n          status: 'APPROVED',\n          reasonDeny: reason,\n          observationDeny: observation,\n        })\n\n        setStatus('SUCCESS')\n      } catch {\n        setStatus('ERROR')\n      }\n    }\n  }\n\n  if (loading) {\n    return (\n      <PageBlock variation=\"full\">\n        <div className=\"flex justify-center ma6\">\n          <Spinner color=\"#f71963\" size={50} />\n        </div>\n      </PageBlock>\n    )\n  }\n\n  return (\n    <>\n      <Tabs fullWidth>\n        <Tab\n          label=\"Partner\"\n          active={currentTab === 0}\n          onClick={() => setCurrentTab(0)}\n        >\n          <PageBlock variation=\"full\">\n            <PartnerData data={data.partner} currentStatus={status} />\n          </PageBlock>\n        </Tab>\n\n        <Tab\n          label=\"Services\"\n          active={currentTab === 1}\n          disabled={!data.partner.id}\n          onClick={() => setCurrentTab(1)}\n        >\n          <PageBlock variation=\"full\">\n            <PartnerServices partnerID={data.partner.id} />\n          </PageBlock>\n        </Tab>\n\n        <Tab\n          label=\"Clients\"\n          active={currentTab === 2}\n          disabled={!data.partner.id}\n          onClick={() => setCurrentTab(2)}\n        >\n          <PageBlock variation=\"full\">\n            <PartnerClients partnerID={data.partner.id} />\n          </PageBlock>\n        </Tab>\n      </Tabs>\n\n      {status && (\n        <div className=\"mb6\">\n          {status === 'SUCCESS' && <Alert type=\"success\">SUCCESS</Alert>}\n          {status === 'ERROR' && <Alert type=\"warning\">ERROR</Alert>}\n          {status === 'DENIED' && <Alert type=\"error\">DENIED</Alert>}\n        </div>\n      )}\n\n      <div className=\"actions flex flex-column-reverse flex-row-l justify-between\">\n        <div className=\"mb3 mb0-l button-deny-container\">\n          <Button\n            variation=\"danger\"\n            onClick={() => handleRateButton('Deny')}\n            disabled={!data.partner.id || status === 'APPROVING'}\n          >\n            {status === 'APPROVING' || status === 'DENYING' ? (\n              <Spinner color=\"#FFF\" size={20} />\n            ) : (\n              'Deny'\n            )}\n          </Button>\n        </div>\n        <div className=\"mb3 mb0-l button-save-container\">\n          <Button\n            onClick={() => handleRateButton('Approve')}\n            disabled={!data.partner.id || status === 'APPROVING'}\n          >\n            {status === 'APPROVING' || status === 'DENYING' ? (\n              <Spinner color=\"#FFF\" size={20} />\n            ) : (\n              'Approve'\n            )}\n          </Button>\n        </div>\n      </div>\n      <DenyModal\n        show={isOpen}\n        onClose={onClose}\n        onDeny={handleDeny}\n        statusButton={statusButton}\n      />\n    </>\n  )\n}\n\nexport default PartnerDetails\n","import type { FC } from 'react'\nimport React, { useState } from 'react'\n\nimport { Button, Dropdown, Modal, Textarea } from 'vtex.styleguide'\n\ninterface Props {\n  show: boolean\n  onClose: any\n  onDeny: any\n  statusButton: any\n}\n\nconst options = [\n  { value: '', label: 'Select' },\n  { value: 'Dados incorretos', label: 'Incorrect Data' },\n  { value: 'Dados incompletos', label: 'Incomplete Data' },\n  { value: 'Logo enviada fora do padrão', label: 'Logo out of pattern' },\n  {\n    value: 'Categoria principal selecionada inadequada',\n    label: 'Inappropriate selected main category',\n  },\n  {\n    value: 'Case dos clientes deve ser revisado',\n    label: 'Customer case must be reviewed',\n  },\n  {\n    value: 'Serviços descritos não estão de acordo',\n    label: 'Described services are not in agreement',\n  },\n]\n\n\nconst DenyModal: FC<Props> = ({ show, onClose, onDeny, statusButton }) => {\n  const [reason, setReason] = useState('')\n  const [observation, setObservation] = useState('')\n  const [error, setError] = useState(false)\n  const [errorObservation, setErrorObservation] = useState(false)\n\n  const denyMessage = statusButton === 'Deny'\n\n  const handleDeny = () => {\n    let hasError = false\n\n    if (denyMessage && !reason) {\n      setError(true)\n      hasError = true\n    }\n\n    if (denyMessage && !observation.length) {\n      setErrorObservation(true)\n      hasError = true\n    }\n\n    if (hasError) return\n\n    onDeny(reason, observation)\n    onClose()\n  }\n\n  return (\n    <Modal\n      isOpen={show}\n      title={\n        denyMessage ? (\n          'Are you sure you want to deny this partner?'\n        ) : (\n          <span>\n            You are approving this partner. <br />\n            If you have some observation, please fill the fields below.\n          </span>\n        )\n      }\n      aria-describedby=\"modal-description\"\n      responsiveFullScreen\n      bottomBar={\n        <div className=\"w-100 nowrap flex justify-between\">\n          <span className=\"mr4\">\n            <Button variation=\"tertiary\" onClick={onClose}>\n              Cancel\n            </Button>\n          </span>\n          <span>\n            <Button variation=\"danger\" onClick={handleDeny}>\n              {denyMessage ? 'Deny' : 'Approve'}\n            </Button>\n          </span>\n        </div>\n      }\n      onClose={onClose}\n    >\n      <div className=\"flex flex-column\">\n        <div className=\"w-100 w-50-ns\">\n          <Dropdown\n            label={\n              denyMessage\n                ? 'Select the deny reason'\n                : 'Select the reason for observation'\n            }\n            options={options}\n            value={reason}\n            required={!!denyMessage}\n            error={error}\n            onChange={(_: any, selected: string) => setReason(selected)}\n          />\n        </div>\n        <div className=\"w-100 mt5 mb5\">\n          <Textarea\n            required\n            error={errorObservation}\n            label={\n              denyMessage\n                ? 'Write some observation.'\n                : 'Write some observation if necessary.'\n            }\n            onChange={(e: any) => setObservation(e.target.value)}\n            value={observation}\n          />\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default DenyModal\n","// Dependencies\nimport React from 'react'\n\ninterface ImageContainerProps {\n  title: string\n  imgURL: string\n}\n\nconst ImageContainer: React.FC<ImageContainerProps> = ({ title, imgURL }) => (\n  <div className=\"image-container\">\n    <div className=\"flex\">\n      <div className=\"mr5 mr7-l\">\n        <figure className=\"image-container-figure\">\n          <img src={imgURL} alt=\"preview\" />\n        </figure>\n      </div>\n\n      <div className=\"flex flex-column justify-center w-100\">\n        <h2 className=\"ma0 mb3 image-container-title\">{title}</h2>\n      </div>\n    </div>\n  </div>\n)\n\nexport default ImageContainer\n","// Dependencies\nimport React from 'react'\n\nconst DropdownIndicator = () => (\n  <div className=\"ml4 flex items-center\">\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0)\">\n        <path\n          d=\"M13.7262 4.39069L8.00211 10.1147L2.27804 4.39069C2.02657 4.14782 1.68977 4.01342 1.34017 4.01646C0.990566 4.0195 0.656145 4.15972 0.408931 4.40694C0.161717 4.65415 0.0214904 4.98856 0.0184525 5.33816C0.0154146 5.68775 0.149809 6.02456 0.392689 6.27603L7.05944 12.9427C7.30948 13.1927 7.64856 13.3331 8.00211 13.3331C8.35567 13.3331 8.69475 13.1927 8.94479 12.9427L15.6115 6.27603C15.7389 6.15303 15.8405 6.0059 15.9103 5.84323C15.9802 5.68056 16.017 5.5056 16.0185 5.32856C16.0201 5.15152 15.9863 4.97595 15.9193 4.81209C15.8523 4.64823 15.7533 4.49936 15.6281 4.37417C15.5029 4.24898 15.354 4.14997 15.1901 4.08293C15.0263 4.01589 14.8507 3.98215 14.6737 3.98369C14.4966 3.98523 14.3217 4.02201 14.159 4.09189C13.9963 4.16177 13.8492 4.26335 13.7262 4.39069Z\"\n          fill=\"#142032\"\n        />\n      </g>\n\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width=\"16.0002\" height=\"16\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </div>\n)\n\nexport default DropdownIndicator\n","/* eslint-disable react/jsx-pascal-case */\n// Dependencies\nimport React from 'react'\nimport { EXPERIMENTAL_Select } from 'vtex.styleguide'\n\n// Components\nimport DropdownIndicator from './DropdownIndicator'\n\nexport interface ISelectProps {\n  disabled?: boolean\n  value?: ISelectOption | ISelectOption[] | string\n  multi?: boolean\n  placeholder?: string | React.ReactElement\n  errorMessage?: string\n  options: ISelectOption[]\n  onChange?: (value: ISelectOption | ISelectOption[]) => void\n}\n\nconst Select: React.FC<ISelectProps> = ({\n  value,\n  options,\n  onChange,\n  disabled,\n  errorMessage,\n  multi = true,\n  placeholder = 'Select...',\n}) => (\n  <div className=\"select-input-container\">\n    <EXPERIMENTAL_Select\n      value={value}\n      multi={multi}\n      options={options}\n      disabled={disabled}\n      onChange={onChange}\n      placeholder={placeholder}\n      errorMessage={errorMessage}\n      components={{ DropdownIndicator }}\n    />\n  </div>\n)\n\nexport default Select\n","// Dependencies\nimport React from 'react'\n\nconst Table: React.FC = ({ children }) => (\n  <section className=\"table mb7 mb8-l\">{children}</section>\n)\n\nexport default Table\n","// Dependencies\nimport React from 'react'\nimport { Checkbox } from 'vtex.styleguide'\n\ninterface TableRowProps extends Omit<IClientItem, 'imgURL'> {\n  imgURL?: string\n  showEmptyImage?: boolean,\n  handler: (id: string) => void\n}\n\nconst TableRow: React.FC<TableRowProps> = ({\n  name,\n  imgURL,\n  id,\n  handler,\n  isActive,\n  description,\n  showEmptyImage = true,\n}) => {\n  return (\n    <div className=\"table-row\">\n      <div className=\"mr5 mr7-l\">\n\n        <Checkbox\n          checked={isActive}\n           name={name}\n           id={id}\n           onChange={() => handler(id)}/>\n\n      </div>\n\n      <div className=\"flex w-100 items-center\">\n        {!imgURL && showEmptyImage && (\n          <span className=\"table-row__empty-image mr5\" />\n        )}\n\n        {imgURL && (\n          <div className=\"table-row__image-container mr5\">\n            <img src={imgURL} alt={name} className=\"table-row__image\" />\n          </div>\n        )}\n\n        <div className=\"table-row__group\">\n          <h3 className=\"table-row__name\">{name}</h3>\n\n          <p className=\"table-row__short-description\">{description}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableRow\n","// Dependencies\nimport React from 'react'\n\nconst Title: React.FC = ({ children }) => <h2 className=\"title\">{children}</h2>\n\nexport default Title\n","// Dependencies\nimport React from 'react'\nimport { Spinner } from 'vtex.styleguide'\nimport { useQuery, gql } from '@apollo/client'\n\n// Components\nimport Title from '../../components/Title'\nimport Table from '../../components/Table'\nimport TableRow from '../../components/TableRow'\n\n// Queries\nconst getClientsQuery = gql`\n  query getClients($partnerID: ID) {\n    clients(partnerID: $partnerID)\n      @context(provider: \"partnernetwork.vtex-services@1.x\") {\n      id\n      name\n      imgURL\n      isActive\n      description\n      accountName\n    }\n  }\n`\n\ninterface PartnerClientsProps {\n  partnerID: string\n}\n\nconst PartnerClients: React.FC<PartnerClientsProps> = ({ partnerID }) => {\n  const { data, loading: getLoading } = useQuery(getClientsQuery, {\n    variables: {\n      partnerID,\n    },\n  })\n\n  if (getLoading) {\n    return (\n      <div className=\"flex justify-center ma6\">\n        <Spinner color=\"#f71963\" size={50} />\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <Title>Clients</Title>\n\n      {data && data.clients.length > 0 && (\n        <Table>\n          {data.clients.map((client: IClientItem) => (\n            <TableRow\n            id={client.id}\n            handler={() => {}}\n              key={client.id}\n              name={client.name}\n              imgURL={client.imgURL}\n              isActive={client.isActive}\n              description={client.description}\n            />\n          ))}\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default PartnerClients\n","export const categories = [\n  {\n    id: 'marketing',\n    name: 'Marketing',\n    subcategories: [\n      {\n        id: 'crm',\n        name: 'CRM',\n      },\n      {\n        id: 'atendimento-ao-cliente',\n        name: 'Atendimento ao cliente',\n      },\n      {\n        id: 'influenciador(a)',\n        name: 'Influenciador(a)',\n      },\n      {\n        id: 'busca-e-sugestoes',\n        name: 'Busca e sugestões',\n      },\n      {\n        id: 'fotos-e-videos',\n        name: 'Fotos e Videos',\n      },\n      {\n        id: 'automacao-chatbot-ura',\n        name: 'Automação (chatbot/URA)',\n      },\n      {\n        id: 'reviews',\n        name: 'Reviews',\n      },\n      {\n        id: 'design-and-ux',\n        name: 'Design & UX',\n      },\n    ],\n  },\n  {\n    id: 'operacoes-e-fulfillment',\n    name: 'Operações e Fulfillment',\n    subcategories: [\n      {\n        id: 'inventario-armazenamento',\n        name: 'Inventário/Armazenamento',\n      },\n      {\n        id: 'logistica-transporte',\n        name: 'Logística/Transporte',\n      },\n      {\n        id: 'erp-gestao-de-catalogo-inventario',\n        name: 'ERP - gestão de catalogo/inventário',\n      },\n    ],\n  },\n  {\n    id: 'gestao-de-ecommerce',\n    name: 'Gestão de Ecommerce',\n    subcategories: [\n      {\n        id: 'consultoria',\n        name: 'Consultoria',\n      },\n      {\n        id: 'treinamento-e-certificacao',\n        name: 'Treinamento e Certificação',\n      },\n      {\n        id: 'inteligencia-de-dados',\n        name: 'Inteligência de Dados',\n      },\n      {\n        id: 'servicos-juridicos',\n        name: 'Serviços Jurídicos',\n      },\n    ],\n  },\n  {\n    id: 'servicos-financeiros',\n    name: 'Serviços Financeiros',\n    subcategories: [\n      {\n        id: 'antifraude',\n        name: 'Antifraude',\n      },\n      {\n        id: 'servicos-de-fidelidade-cupons-clubes-devolucao',\n        name: 'Serviços de fidelidade (cupons / clubes / devolução)',\n      },\n      {\n        id: 'seguro',\n        name: 'Seguro',\n      },\n      {\n        id: 'contabilidade-e-impostos',\n        name: 'Contabilidade e Impostos',\n      },\n      {\n        id: 'provedor-de-pagamento',\n        name: 'Provedor de Pagamento',\n      },\n    ],\n  },\n  {\n    id: 'marketplaces',\n    name: 'Marketplaces',\n    subcategories: [\n      {\n        id: 'out',\n        name: 'Out',\n      },\n      {\n        id: 'in',\n        name: 'IN',\n      },\n      {\n        id: 'hub',\n        name: 'HUB',\n      },\n      {\n        id: 'seller-center',\n        name: 'Seller Center',\n      },\n    ],\n  },\n  {\n    id: 'implementacao-e-vendas',\n    name: 'Implementação e Vendas',\n    subcategories: [\n      {\n        id: 'full-commerce',\n        name: 'Full Commerce',\n      },\n      {\n        id: 'integracao-b2b-b2c-custom-apps-mobile-apps',\n        name: 'Integração (B2B/B2C/Custom apps/Mobile apps)',\n      },\n      {\n        id: 'implementador-desenvolvedor',\n        name: 'Implementador / Desenvolvedor',\n      },\n    ],\n  },\n]\n","export default [\n  'Argentina',\n  'Brasil',\n  'Chile',\n  'Colômbia',\n  'Romênia',\n  'Estados Unidos',\n]\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n// Dependencies\nimport React, { useState, useEffect } from 'react'\nimport { Input, Textarea, CheckboxGroup } from 'vtex.styleguide'\n\n// Data\nimport countries from './countries'\nimport partnerTypes from './partnerTypes'\nimport { categories } from './categories'\n\n// Components\nimport Select from '../../components/Select'\nimport ImageContainer from '../../components/ImageContainer'\nimport axios from 'axios'\n\nconst countryOptions = countries.map(country => ({\n  label: country,\n  value: country,\n}))\n\ninterface CheckedMap {\n  label?: string\n  checked: boolean\n}\n\ninterface CategoriesCheckboxes {\n  [key: string]: CheckedMap\n}\n\nconst categoriesInitialState = categories.reduce(\n  (obj, category) => ({\n    ...obj,\n    [category.id]: category.subcategories.reduce(\n      (obj2, subcategory) => ({\n        ...obj2,\n        [subcategory.id]: {\n          checked: false,\n          label: subcategory.name,\n        },\n      }),\n      {}\n    ),\n  }),\n  {}\n)\n\ninterface PartnerDataProps {\n  data: IPartnerData\n  currentStatus: any\n}\n\nconst PartnerData: React.FC<PartnerDataProps> = ({ data, currentStatus }) => {\n  const [categoriesCheckboxes, setCategoriesCheckboxes] = useState<\n    CategoriesCheckboxes\n  >(categoriesInitialState)\n\n  const [denialReason, setDenialReason] = useState('')\n\n  const getDenialReason = async () => {\n    const denialResponse = await axios.get(\n      `/api/dataentities/PN/documents/${data.id}?_fields=reasonDeny`\n    )\n\n    setDenialReason(denialResponse.data.reasonDeny)\n  }\n\n  const { categories: _categories, subcategories, status } = data\n\n  useEffect(() => {\n    getDenialReason()\n\n    setCategoriesCheckboxes(prevState => {\n      const newCheckedMap = _categories.reduce((obj: any, category: any) => {\n        const subcategoryFinded = subcategories.find(\n          ({ categoryID }: { categoryID: string }) => categoryID === category.id\n        )\n\n        const prevSubCategories = categoriesCheckboxes[category.id]\n\n        if (!subcategoryFinded) return obj\n\n        return {\n          ...obj,\n          [category.id]: subcategoryFinded.subcategories.reduce(\n            (obj2: any, subcategory: any) => {\n              return {\n                ...obj2,\n                [subcategory.id]: {\n                  checked: true,\n                  label: subcategory.name,\n                },\n              }\n            },\n            {\n              ...prevSubCategories,\n            }\n          ),\n        }\n      }, {})\n\n      return {\n        ...prevState,\n        ...newCheckedMap,\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentStatus, status])\n\n  const regionsValue = data.regions\n    .map(region => countryOptions.find(country => country.value === region))\n    .filter(Boolean)\n\n  const typesValue = data.types\n    .map(type => partnerTypes.find(partnerType => partnerType.value === type))\n    .filter(Boolean)\n\n  return (\n    <>\n      <div className=\"mb8\">\n        <ImageContainer title={data.name} imgURL={data.imgURL} />\n      </div>\n\n      <div className=\"mb7 flex flex-column flex-row-l\">\n        <div className=\"w-100 mb7 mb0-l mr7-l\">\n          <Input disabled value={data.name} />\n        </div>\n\n        <div className=\"w-100\">\n          <div className=\"select-input-container\">\n            <Select\n              multi\n              disabled\n              options={countryOptions}\n              value={regionsValue as ISelectOption[]}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mb7 flex flex-column flex-row-l\">\n        <div className=\"w-100 mb7 mb0-l mr7-l\">\n          <div className=\"select-input-container\">\n            <Select\n              multi\n              disabled\n              options={partnerTypes}\n              value={typesValue as ISelectOption[]}\n            />\n          </div>\n        </div>\n\n        <div className=\"w-100\">\n          <Input disabled type=\"url\" value={data.website} />\n        </div>\n      </div>\n\n      <div className=\"mb7 mb8-l flex\">\n        <div className=\"w-100\">\n          <Input disabled type=\"email\" value={data.email} />\n        </div>\n      </div>\n      <div className=\"mb7 about-the-partner\">\n        <h3 className=\"t-heading-3\">About the partner</h3>\n\n        <Textarea disabled resize=\"none\" value={data.description} />\n      </div>\n\n      <div className=\"mb7 about-the-partner\">\n        <h3 className=\"t-heading-3\">Categorias anb Subcategories</h3>\n\n        {categories.map(category => {\n          const checkedMap = categoriesCheckboxes[category.id]\n\n          return (\n            <div className=\"mb6\" key={category.id}>\n              <CheckboxGroup\n                value=\"simple\"\n                id={category.id}\n                name={category.id}\n                label={category.name}\n                checkedMap={checkedMap}\n              />\n            </div>\n          )\n        })}\n      </div>\n\n      {denialReason && (\n        <div className=\"mb7 about-the-partner\">\n          <h3 className=\"t-heading-3\">\n            {(currentStatus !== undefined && currentStatus === 'DENIED') ||\n            status === 'DENIED'\n              ? 'Denial reason'\n              : 'Observation'}\n          </h3>\n          <Input disabled type=\"name\" value={denialReason} />\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default PartnerData\n","export default [\n  {\n    value: 'ISV',\n    label: 'ISV',\n  },\n  {\n    value: 'Agencia / Reseller',\n    label: 'Agencia / Reseller',\n  },\n]\n","// Dependencies\nimport React, { useEffect, useState } from 'react'\nimport { Spinner } from 'vtex.styleguide'\nimport { useQuery, gql, useMutation } from '@apollo/client'\n\n// Components\nimport Title from '../../components/Title'\nimport Table from '../../components/Table'\nimport TableRow from '../../components/TableRow'\n\n// Queries\nconst getServicesQuery = gql`\n  query getServices($partnerID: ID) {\n    services(partnerID: $partnerID)\n      @context(provider: \"partnernetwork.vtex-services@1.x\") {\n      id\n      name\n      isActive\n      description\n    }\n  }\n`\n\nconst updateServiceQuery = gql`\n  mutation updateService($id: ID, $input: ServiceInput) {\n    updateService(id: $id, input: $input)\n      @context(provider: \"partnernetwork.vtex-services@0.x\") {\n      id\n      name\n      isActive\n      description\n    }\n  }\n`\n\n\ninterface PartnerServicesProps {\n  partnerID: string\n}\n\nconst PartnerServices: React.FC<PartnerServicesProps> = ({ partnerID }) => {\n  const { data, loading: getLoading, refetch} = useQuery(getServicesQuery, {\n    variables: {\n      partnerID,\n    },\n  })\n\n  const [updateServiceMutation, {loading: updateLoading}] = useMutation(updateServiceQuery)\n\n\n\n  const [serviceItems, setServiceItens] = useState<IServiceItem[]>([] as IServiceItem[])\n\n  useEffect(() => {\n    data && setServiceItens(data.services)\n  }, [data, getLoading])\n\n\n  const handleOptionCheck = async (id: string) => {\n    const newServiceItems = serviceItems.map(item => {\n      if (item.id === id) {\n        return { ...item, isActive: !item.isActive }\n      } else {\n        return item\n      }\n    })\n\n    setServiceItens(newServiceItems)\n\n    const item = serviceItems.find(item => item.id === id)\n\n    try {\n      await updateServiceMutation({\n        variables: {\n          id:  item?.id,\n          input: {\n            description: item?.description,\n            isActive: !item?.isActive,\n            name: item?.name,\n          }\n        }\n      }\n      )\n\n      await refetch()\n\n    } catch (error) {\n      console.error(error)\n    }\n\n  }\n\n\n  if (getLoading || updateLoading) {\n    return (\n      <div className=\"flex justify-center ma6\">\n        <Spinner color=\"#f71963\" size={50} />\n      </div>\n    )\n  }\n\n  if (serviceItems.length === 0) {\n    return (\n      <div className=\"flex justify-center ma6\">\n        <Title>No services available for this partner</Title>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <Title>Services</Title>\n\n      {serviceItems && serviceItems.length > 0 && (\n        <Table>\n          {serviceItems.map((service: IServiceItem) => (\n             <TableRow\n              key={service.id}\n              id={service.id}\n              handler={handleOptionCheck}\n               name={service.name}\n               showEmptyImage={false}\n               isActive={service.isActive}\n               description={service.description}\n              />\n          ))}\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default PartnerServices\n"],"sourceRoot":""}